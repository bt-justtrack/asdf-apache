#!/usr/bin/env bash

set -e
set -o pipefail

if [ -n "${DEBUG}" ]; then
  set -x
fi

ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE}
TMPDIR="${TMPDIR:-$(mktemp -d -t flink_install_XXXXXXX)}/"
SCALA_VERSION="${SCALA_VERSION:-"scala_2.11"}"
PRODUCT_NAME="flink"
[ -n "$ASDF_INSTALL_VERSION" ] || (>&2 echo 'Missing ASDF_INSTALL_VERSION' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (>&2 echo 'Missing ASDF_INSTALL_PATH' && exit 1)

install_release() {
  local product_name="$1"
  local version="$2"
  local install_path="$3"
  local tmp_dir="$4"
  local product_name_version="${product_name}-${version}"

  mkdir -p "${install_path}"

  local download_url="$(get_download_url $product_name $version)"
  local filename="$(basename $download_url)"

  local filepath="${tmp_dir}${filename}"
  if [ ! -f "${filepath}" ]; then
    echo "Downloading ${product_name_version} from ${download_url}"
    download "${download_url}" "${filepath}"
  fi
  extract "${tmp_dir}" "${filename}" "${install_path}"
}

extract() {
  local path="$1"
  local filename="$2"
  local output="$3"
  tar -xvf "${path}/${filename}" --strip-components=1 -C "${output}"
}

get_download_url() {
  local product_name="$1"
  local version="$2"
  local product_name_version="${product_name}-${version}"
                                                                                                            # FIXXME
  echo "https://archive.apache.org/dist/${product_name}/${product_name_version}/${product_name_version}-bin-${SCALA_VERSION}.tgz"
}

download() {
  local download_url="${1}"
  local output_path="${2}"
  local curl_cmd="$(command -vp curl)"
  $($curl_cmd -fS -# "$download_url" -o "$output_path")
}

install_release $PRODUCT_NAME $ASDF_INSTALL_VERSION "${ASDF_INSTALL_PATH}/" $TMPDIR

if [ -n "${DEBUG}" ]; then
  set +x
fi
